---

- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    postgresql_version: 13
    postgresql_users:
      - name: miniflux
        password: miniflux
        db: "miniflux"

    postgresql_databases:
      - name: miniflux
        owner: miniflux
        hstore: yes

    miniflux_dbname: miniflux
    miniflux_dbuser: miniflux
    miniflux_dbpassword: "miniflux"
    miniflux_conf_extra_options:
      - METRICS_COLLECTOR=1
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)

    - name: Debian | Refresh apt cache
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

  roles:
    - geerlingguy.postgresql
    - ajnasz.miniflux
