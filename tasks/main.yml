---

- name: Set fact is_container
  ansible.builtin.set_fact:
    is_container: true
  when: >
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "docker"
       or ansible_virtualization_type == "containerd"
       or ansible_virtualization_type == "container"
      )
    )

- name: "Add user group"
  ansible.builtin.group:
    name: "{{ miniflux_group }}"
    state: "present"

- name: "Add miniflux user"
  ansible.builtin.user:
    name: "{{ miniflux_user }}"
    group: "{{ miniflux_group }}"
    home: "/var/empty"
    create_home: "no"
    system: "yes"
    shell: "/bin/false"

- name: "Include armv7 vars"
  ansible.builtin.include_vars:
    file: "armv7.yml"
  when: ansible_architecture == "armv7l"

- name: "Include amd64 vars"
  ansible.builtin.include_vars:
    file: "amd64.yml"
  when: ansible_architecture != "armv7l"

- name: "Download miniflux binary"
  ansible.builtin.get_url:
    force: "yes"
    url: "{{ miniflux_download_url }}"
    dest: "/usr/local/bin/miniflux"
    mode: "0755"
    owner: "root"
    group: "root"
  notify:
    - Stop miniflux
    - Install postgresql extension.
    - Run miniflux db migration
    - "Restart miniflux"

- name: "Add miniflux systemd file"
  ansible.builtin.copy:
    src: "miniflux.service"
    dest: "/etc/systemd/system/miniflux.service"
    mode: '0644'
  notify:
    - "Reload systemd"
    - "Enable miniflux"

# - name: "Log out users"
#   environment:
#     DATABASE_URL: "{{ miniflux_database_url }}"
#   ansible.builtin.command: "/usr/local/bin/miniflux -flush-sessions"
#   notify:
#     - "Restart miniflux"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: "Add real config"
  vars:
    run_migrations: false
    create_admin: false
  ansible.builtin.template:
    src: "miniflux.conf.j2"
    dest: "/etc/miniflux.conf"
    owner: root
    group: root
    mode: '0644'
  notify:
    - "Restart miniflux"
